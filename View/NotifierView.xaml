<base:NotifierViewBase x:Name="notifierViewBase" x:Class="WPF_StatusNotification.View.NotifierView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                  xmlns:base="clr-namespace:WPF_StatusNotification.Base"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WPF_StatusNotification.View"
                          DataContext="{Binding Source={StaticResource Locator},Path=NotifierVM}" 
                       xmlns:vm="clr-namespace:WPF_StatusNotification.ViewModel"
                      
        mc:Ignorable="d"
        Title="NotifierView" Height="{Binding Height}" Width="{Binding Width}"  AllowsTransparency="True" Background="#FF131212" Opacity="0.8" WindowStyle="None" Loaded="notifierViewBase_Loaded" >
    <base:NotifierViewBase.Resources>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="#FFDDDDDD"/>
            <Setter Property="BorderBrush" Value="#FF707070"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!--<Trigger Property="IsDefaulted" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>-->
                            <!--<Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFBEE6FD"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                            </Trigger>-->
                            <!--<Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFC4E5F6"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                            </Trigger>-->
                            <!--<Trigger Property="ToggleButton.IsChecked" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                                <Setter Property="Foreground" Value="#FF838383"/>
                            </Trigger>-->
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Storyboard x:Key="OnLoaded1" RepeatBehavior="3x" AutoReverse="True">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Canvas.Left)" Storyboard.TargetName="notifierViewBase">
                <EasingDoubleKeyFrame KeyTime="0:0:0.00" Value="{Binding XPath=RightOri,Source=Self }"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.10" Value="{Binding XPath=RightFinal,Source=Self}"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.20" Value="{Binding XPath=RightOri,Source=Self }"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.30" Value="{Binding XPath=RightFinal,Source=Self}"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.40" Value="{Binding XPath=RightOri,Source=Self }"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.50" Value="{Binding XPath=RightFinal,Source=Self}"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

     
        <Storyboard x:Key="OnLoaded3">

            <DoubleAnimation From="0.1" To="1.0"
 RepeatBehavior="Forever" Duration="0:0:1" Storyboard.TargetProperty="Opacity"/>

        </Storyboard>

        <Storyboard x:Key="OnLoaded4">

            <DoubleAnimation From="1920" To="1500"
 RepeatBehavior="Forever" Duration="0:0:1" Storyboard.TargetProperty="Left"/>

        </Storyboard>


    </base:NotifierViewBase.Resources>
    <base:NotifierViewBase.Triggers>
        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
            <BeginStoryboard  Storyboard="{StaticResource OnLoaded4}"/>
        </EventTrigger>
    </base:NotifierViewBase.Triggers>

    <Grid>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="60"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0" >
                <Grid.RowDefinitions>
                    <RowDefinition Height="60"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <!--<Grid Margin="20">
                <Grid.Background>
                    <ImageBrush></ImageBrush>
                </Grid.Background>
            </Grid>-->
                <Grid >
                    <Image Width="25" Opacity="{Binding Path=Opacity,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type base:NotifierViewBase}}}" Source="/WPF_StatusNotification;component/Resource/Lights_1024px_1184578_easyicon.net.png"></Image>
                </Grid>

            </Grid>
            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="60"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid >
                    <TextBlock HorizontalAlignment="Left" VerticalAlignment="Center"  FontSize="22" FontWeight="Bold" Foreground="White"  Text="{Binding Header}"></TextBlock>
                </Grid>
                <Grid Margin="0,0,20,20" Grid.Row="1">
                    <TextBlock HorizontalAlignment="Left" VerticalAlignment="Top" TextWrapping="Wrap" FontSize="22"  Foreground="#FFCDC9C9"  Text="{Binding Context}"></TextBlock>
                </Grid>
            </Grid>

        </Grid>
        <Grid>
            <Button Style="{DynamicResource ButtonStyle1}" x:Name="button" Margin="10" Width="30" Height="20" Background="Transparent" HorizontalAlignment="Right" VerticalAlignment="Top">
                <Image x:Name="image" Source="/WPF_StatusNotification;component/Resource/right arrow 24 px.png"  ></Image>
            </Button>
        </Grid>
    </Grid>
</base:NotifierViewBase>
